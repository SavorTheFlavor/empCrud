<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.me.crud.dao.EmployeeMapper">
  <resultMap id="EmployeeResult" type="com.me.crud.bean.Employee">
    <id column="emp_id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <association property="department" javaType="com.me.crud.bean.Department">
    	<!-- column是指查出来的列结果名...因为java本来就不知道数据库里的列名是什么 -->
    	<id column="dept_id" property="id" jdbcType="INTEGER" />
    	<result column="dept_name" property="name" jdbcType="VARCHAR"/>
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    id, name, gender, email, department_id
  </sql>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="EmployeeResult">
    select 
    e.id emp_id, e.name, gender, email, department_id, d.id dept_id, d.name dept_name
        from emp as e left join dept d on department_id=d.id
     where e.id = #{id}
  </select>
  
    <select id="selectWithDeparment" parameterType="com.me.crud.bean.Employee" resultMap="EmployeeResult">
    	select 
    	e.id emp_id, e.name, gender, email, department_id, d.id dept_id, d.name dept_name
        from emp e left join dept d on department_id=d.id
   		
    <where>
	    <if test="id != null">
	    	and emp_id=#{id}
	    </if>
	      <if test="name != null and !&quot;&quot;.equals(name.trim())">
	    	and e.name=#{name}
	    </if>
	      <if test="gender != null and !&quot;&quot;.equals(gender.trim())">
	    	and gender=#{gender}
	    </if>
	      <if test="email != null and !&quot;&quot;.equals(email.trim())">
	    	and email=#{email}
	    </if>
	    <if test="departmentId != null">
	    	and department_id=#{departmentId}
	    </if>
      </where>
	      order by e.name 
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.me.crud.bean.Employee">
    insert into emp (id, name, gender, 
      email, department_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.me.crud.bean.Employee">
    insert into emp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.me.crud.bean.Employee">
    update emp
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.me.crud.bean.Employee">
    update emp
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>